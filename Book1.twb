<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0308.0326                               -->
<workbook original-version='18.1' source-build='2024.1.1 (20241.24.0308.0326)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='10'>
        <calculation class='tableau' formula='10' />
      </column>
    </datasource>
    <datasource caption='localhost' inline='true' name='federated.0mawx7a12n6aqx14qz27917q3g16' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.02jmsyb19od5rp1bj8syk1bfg2xw'>
            <connection class='mysql' dbname='co2' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='mysql.02jmsyb19od5rp1bj8syk1bfg2xw' name='co' table='[co]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='mysql.02jmsyb19od5rp1bj8syk1bfg2xw' name='co' table='[co]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[co]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16383</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co_7AD1BEE36C3642EE958C4EE20C13666D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[co]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co_7AD1BEE36C3642EE958C4EE20C13666D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2]</local-name>
            <parent-name>[co]</parent-name>
            <remote-alias>co2</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co_7AD1BEE36C3642EE958C4EE20C13666D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_growth_prct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_growth_prct]</local-name>
            <parent-name>[co]</parent-name>
            <remote-alias>co2_growth_prct</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co_7AD1BEE36C3642EE958C4EE20C13666D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_per_capita]</local-name>
            <parent-name>[co]</parent-name>
            <remote-alias>co2_per_capita</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co_7AD1BEE36C3642EE958C4EE20C13666D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cumulative_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cumulative_co2]</local-name>
            <parent-name>[co]</parent-name>
            <remote-alias>cumulative_co2</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co_7AD1BEE36C3642EE958C4EE20C13666D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coal_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coal_co2]</local-name>
            <parent-name>[co]</parent-name>
            <remote-alias>coal_co2</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co_7AD1BEE36C3642EE958C4EE20C13666D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cement_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cement_co2]</local-name>
            <parent-name>[co]</parent-name>
            <remote-alias>cement_co2</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co_7AD1BEE36C3642EE958C4EE20C13666D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flaring_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flaring_co2]</local-name>
            <parent-name>[co]</parent-name>
            <remote-alias>flaring_co2</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co_7AD1BEE36C3642EE958C4EE20C13666D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gas_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gas_co2]</local-name>
            <parent-name>[co]</parent-name>
            <remote-alias>gas_co2</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co_7AD1BEE36C3642EE958C4EE20C13666D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>oil_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[oil_co2]</local-name>
            <parent-name>[co]</parent-name>
            <remote-alias>oil_co2</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co_7AD1BEE36C3642EE958C4EE20C13666D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_industry_co2</remote-name>
            <remote-type>3</remote-type>
            <local-name>[other_industry_co2]</local-name>
            <parent-name>[co]</parent-name>
            <remote-alias>other_industry_co2</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co_7AD1BEE36C3642EE958C4EE20C13666D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cement_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cement_co2_per_capita]</local-name>
            <parent-name>[co]</parent-name>
            <remote-alias>cement_co2_per_capita</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co_7AD1BEE36C3642EE958C4EE20C13666D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coal_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coal_co2_per_capita]</local-name>
            <parent-name>[co]</parent-name>
            <remote-alias>coal_co2_per_capita</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co_7AD1BEE36C3642EE958C4EE20C13666D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flaring_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flaring_co2_per_capita]</local-name>
            <parent-name>[co]</parent-name>
            <remote-alias>flaring_co2_per_capita</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co_7AD1BEE36C3642EE958C4EE20C13666D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gas_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gas_co2_per_capita]</local-name>
            <parent-name>[co]</parent-name>
            <remote-alias>gas_co2_per_capita</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co_7AD1BEE36C3642EE958C4EE20C13666D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>oil_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[oil_co2_per_capita]</local-name>
            <parent-name>[co]</parent-name>
            <remote-alias>oil_co2_per_capita</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co_7AD1BEE36C3642EE958C4EE20C13666D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_co2_per_capita</remote-name>
            <remote-type>3</remote-type>
            <local-name>[other_co2_per_capita]</local-name>
            <parent-name>[co]</parent-name>
            <remote-alias>other_co2_per_capita</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co_7AD1BEE36C3642EE958C4EE20C13666D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trade_co2_share</remote-name>
            <remote-type>3</remote-type>
            <local-name>[trade_co2_share]</local-name>
            <parent-name>[co]</parent-name>
            <remote-alias>trade_co2_share</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co_7AD1BEE36C3642EE958C4EE20C13666D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>3</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[co]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co_7AD1BEE36C3642EE958C4EE20C13666D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='co' datatype='table' name='[__tableau_internal_object_id__].[co_7AD1BEE36C3642EE958C4EE20C13666D]' role='measure' type='quantitative' />
      <column caption='Cement Co2' datatype='real' name='[cement_co2]' role='measure' type='quantitative' />
      <column caption='Cement Co2 Per Capita' datatype='real' name='[cement_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
      <column caption='Co2 Growth Prct' datatype='real' name='[co2_growth_prct]' role='measure' type='quantitative' />
      <column caption='Co2 Per Capita' datatype='real' name='[co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Coal Co2' datatype='real' name='[coal_co2]' role='measure' type='quantitative' />
      <column caption='Coal Co2 Per Capita' datatype='real' name='[coal_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Cumulative Co2' datatype='real' name='[cumulative_co2]' role='measure' type='quantitative' />
      <column caption='Flaring Co2' datatype='real' name='[flaring_co2]' role='measure' type='quantitative' />
      <column caption='Flaring Co2 Per Capita' datatype='real' name='[flaring_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Gas Co2' datatype='real' name='[gas_co2]' role='measure' type='quantitative' />
      <column caption='Gas Co2 Per Capita' datatype='real' name='[gas_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
      <column caption='Oil Co2 Per Capita' datatype='real' name='[oil_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Other Co2 Per Capita' datatype='integer' name='[other_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Other Industry Co2' datatype='integer' name='[other_industry_co2]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Trade Co2 Share' datatype='integer' name='[trade_co2_share]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <column-instance column='[cement_co2]' derivation='Sum' name='[sum:cement_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[co2_per_capita]' derivation='Sum' name='[sum:co2_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[coal_co2]' derivation='Sum' name='[sum:coal_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cumulative_co2]' derivation='Sum' name='[sum:cumulative_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[flaring_co2]' derivation='Sum' name='[sum:flaring_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[gas_co2]' derivation='Sum' name='[sum:gas_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[oil_co2]' derivation='Sum' name='[sum:oil_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[other_industry_co2]' derivation='Sum' name='[sum:other_industry_co2:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Christmas Island&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ryukyu Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Asia (excl. China &amp; India)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Europe (excl. EU-27)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;EU-27&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St. Kitts-Nevis-Anguilla&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;French Equatorial Africa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;French West Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Leeward Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North America (excl. USA)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kuwaiti Oil Fires&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Europe (excl. EU-28)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;EU-28&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antarctica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;International transport&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Panama Canal Zone&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:cement_co2:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:oil_co2:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:gas_co2:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:co2_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:flaring_co2:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:other_industry_co2:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:coal_co2:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:cumulative_co2:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='co' id='co_7AD1BEE36C3642EE958C4EE20C13666D'>
            <properties context=''>
              <relation connection='mysql.02jmsyb19od5rp1bj8syk1bfg2xw' name='co' table='[co]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='China vs India internal factors'>
      <table>
        <view>
          <datasources>
            <datasource caption='localhost' name='federated.0mawx7a12n6aqx14qz27917q3g16' />
          </datasources>
          <datasource-dependencies datasource='federated.0mawx7a12n6aqx14qz27917q3g16'>
            <column caption='Cement Co2' datatype='real' name='[cement_co2]' role='measure' type='quantitative' />
            <column caption='Coal Co2' datatype='real' name='[coal_co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Flaring Co2' datatype='real' name='[flaring_co2]' role='measure' type='quantitative' />
            <column caption='Gas Co2' datatype='real' name='[gas_co2]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
            <column-instance column='[cement_co2]' derivation='Sum' name='[sum:cement_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coal_co2]' derivation='Sum' name='[sum:coal_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flaring_co2]' derivation='Sum' name='[sum:flaring_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gas_co2]' derivation='Sum' name='[sum:gas_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[oil_co2]' derivation='Sum' name='[sum:oil_co2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mawx7a12n6aqx14qz27917q3g16].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:cement_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:coal_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:flaring_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:gas_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:oil_co2:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]</column>
            <column>[federated.0mawx7a12n6aqx14qz27917q3g16].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0mawx7a12n6aqx14qz27917q3g16].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mawx7a12n6aqx14qz27917q3g16].[Multiple Values]</rows>
        <cols>([federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk] / [federated.0mawx7a12n6aqx14qz27917q3g16].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{517B8635-33F0-409D-90EB-1B7E85B52C0C}' />
    </worksheet>
    <worksheet name='Co2 Emissioin Over Past 10 Years'>
      <table>
        <view>
          <datasources>
            <datasource caption='localhost' name='federated.0mawx7a12n6aqx14qz27917q3g16' />
          </datasources>
          <datasource-dependencies datasource='federated.0mawx7a12n6aqx14qz27917q3g16'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia (excl. China &amp; India)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Oceania&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:year:qk]' included-values='in-range'>
            <min>2010</min>
            <max>2020</max>
          </filter>
          <slices>
            <column>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]</column>
            <column>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9890055656433105' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]</rows>
        <cols>[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:co2:qk]</cols>
      </table>
      <simple-id uuid='{1EC3462D-4FBE-427C-A4E5-FC307239CB2A}' />
    </worksheet>
    <worksheet name='Co2 Emission Per Capita'>
      <table>
        <view>
          <datasources>
            <datasource caption='localhost' name='federated.0mawx7a12n6aqx14qz27917q3g16' />
          </datasources>
          <datasource-dependencies datasource='federated.0mawx7a12n6aqx14qz27917q3g16'>
            <column caption='Co2 Per Capita' datatype='real' name='[co2_per_capita]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[co2_per_capita]' derivation='Sum' name='[sum:co2_per_capita:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:co2_per_capita:qk]</rows>
        <cols>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{03F36542-821A-4FEE-B38D-E93A8FC951C7}' />
    </worksheet>
    <worksheet name='Co2 Emission by Other Factors'>
      <table>
        <view>
          <datasources>
            <datasource caption='localhost' name='federated.0mawx7a12n6aqx14qz27917q3g16' />
          </datasources>
          <datasource-dependencies datasource='federated.0mawx7a12n6aqx14qz27917q3g16'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;International transport&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Kuwaiti Oil Fires&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk] * [federated.0mawx7a12n6aqx14qz27917q3g16].[sum:co2:qk])</rows>
        <cols>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{ADBDA919-EBBD-4D2D-82AD-23ACA064320A}' />
    </worksheet>
    <worksheet name='Co2 Emission from 1990 to 2020'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Co2 Emission from 1990 to 2020 Based on internal factors
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='localhost' name='federated.0mawx7a12n6aqx14qz27917q3g16' />
          </datasources>
          <datasource-dependencies datasource='federated.0mawx7a12n6aqx14qz27917q3g16'>
            <column caption='Cement Co2' datatype='real' name='[cement_co2]' role='measure' type='quantitative' />
            <column caption='Coal Co2' datatype='real' name='[coal_co2]' role='measure' type='quantitative' />
            <column caption='Flaring Co2' datatype='real' name='[flaring_co2]' role='measure' type='quantitative' />
            <column caption='Gas Co2' datatype='real' name='[gas_co2]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
            <column caption='Other Industry Co2' datatype='integer' name='[other_industry_co2]' role='measure' type='quantitative' />
            <column-instance column='[cement_co2]' derivation='Sum' name='[sum:cement_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coal_co2]' derivation='Sum' name='[sum:coal_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flaring_co2]' derivation='Sum' name='[sum:flaring_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gas_co2]' derivation='Sum' name='[sum:gas_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[oil_co2]' derivation='Sum' name='[sum:oil_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[other_industry_co2]' derivation='Sum' name='[sum:other_industry_co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mawx7a12n6aqx14qz27917q3g16].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:cement_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:coal_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:flaring_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:gas_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:oil_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:other_industry_co2:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:year:qk]' included-values='in-range'>
            <min>1990</min>
            <max>2020</max>
          </filter>
          <slices>
            <column>[federated.0mawx7a12n6aqx14qz27917q3g16].[:Measure Names]</column>
            <column>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0mawx7a12n6aqx14qz27917q3g16].[Multiple Values]' />
              <text column='[federated.0mawx7a12n6aqx14qz27917q3g16].[Multiple Values]' />
              <lod column='[federated.0mawx7a12n6aqx14qz27917q3g16].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mawx7a12n6aqx14qz27917q3g16].[Multiple Values]</rows>
        <cols>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{06084D87-4326-4E10-A0D0-05A8CF0B90E9}' />
    </worksheet>
    <worksheet name='Co2 Emission india vs united states'>
      <table>
        <view>
          <datasources>
            <datasource caption='localhost' name='federated.0mawx7a12n6aqx14qz27917q3g16' />
          </datasources>
          <datasource-dependencies datasource='federated.0mawx7a12n6aqx14qz27917q3g16'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:co2:qk]</rows>
        <cols>([federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk] * [federated.0mawx7a12n6aqx14qz27917q3g16].[none:year:qk])</cols>
      </table>
      <simple-id uuid='{11972D9A-0161-4E73-8705-EE56709C4FF3}' />
    </worksheet>
    <worksheet name='Co2 Emmission over Time'>
      <table>
        <view>
          <datasources>
            <datasource caption='localhost' name='federated.0mawx7a12n6aqx14qz27917q3g16' />
          </datasources>
          <datasource-dependencies datasource='federated.0mawx7a12n6aqx14qz27917q3g16'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:co2:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:co2:qk]</rows>
        <cols>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{EFF43F2C-89E9-4FD4-92C6-37DC60AA9FC8}' />
    </worksheet>
    <worksheet name='Continent wise contribution by internal factors'>
      <table>
        <view>
          <datasources>
            <datasource caption='localhost' name='federated.0mawx7a12n6aqx14qz27917q3g16' />
          </datasources>
          <datasource-dependencies datasource='federated.0mawx7a12n6aqx14qz27917q3g16'>
            <column caption='Cement Co2' datatype='real' name='[cement_co2]' role='measure' type='quantitative' />
            <column caption='Coal Co2' datatype='real' name='[coal_co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Flaring Co2' datatype='real' name='[flaring_co2]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
            <column caption='Other Industry Co2' datatype='integer' name='[other_industry_co2]' role='measure' type='quantitative' />
            <column-instance column='[cement_co2]' derivation='Sum' name='[sum:cement_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coal_co2]' derivation='Sum' name='[sum:coal_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flaring_co2]' derivation='Sum' name='[sum:flaring_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[oil_co2]' derivation='Sum' name='[sum:oil_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[other_industry_co2]' derivation='Sum' name='[sum:other_industry_co2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mawx7a12n6aqx14qz27917q3g16].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:coal_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:flaring_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:oil_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:other_industry_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:cement_co2:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0mawx7a12n6aqx14qz27917q3g16].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:coal_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:flaring_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:oil_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:other_industry_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:cement_co2:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia (excl. China &amp; India)&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Oceania&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]</column>
            <column>[federated.0mawx7a12n6aqx14qz27917q3g16].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0mawx7a12n6aqx14qz27917q3g16].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0mawx7a12n6aqx14qz27917q3g16].[Multiple Values]</rows>
        <cols>([federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk] / [federated.0mawx7a12n6aqx14qz27917q3g16].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{0777FC50-36CF-4CAE-AD53-ED2B3EDD7298}' />
    </worksheet>
    <worksheet name='Cummulative co2 and co2 per capita over years'>
      <table>
        <view>
          <datasources>
            <datasource caption='localhost' name='federated.0mawx7a12n6aqx14qz27917q3g16' />
          </datasources>
          <datasource-dependencies datasource='federated.0mawx7a12n6aqx14qz27917q3g16'>
            <column caption='Co2 Per Capita' datatype='real' name='[co2_per_capita]' role='measure' type='quantitative' />
            <column caption='Cumulative Co2' datatype='real' name='[cumulative_co2]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2_per_capita]' derivation='Sum' name='[sum:co2_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cumulative_co2]' derivation='Sum' name='[sum:cumulative_co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:year:qk]' included-values='in-range'>
            <min>1975</min>
            <max>2020</max>
          </filter>
          <slices>
            <column>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:cumulative_co2:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0mawx7a12n6aqx14qz27917q3g16].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:co2_per_capita:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0mawx7a12n6aqx14qz27917q3g16].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:cumulative_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0mawx7a12n6aqx14qz27917q3g16].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0mawx7a12n6aqx14qz27917q3g16].[sum:co2_per_capita:qk] + [federated.0mawx7a12n6aqx14qz27917q3g16].[sum:cumulative_co2:qk])</rows>
        <cols>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{4DD15DA4-CF81-4AB2-BC41-2BACEECD6847}' />
    </worksheet>
    <worksheet name='Donut Chart For Cement co2'>
      <table>
        <view>
          <datasources>
            <datasource caption='localhost' name='federated.0mawx7a12n6aqx14qz27917q3g16' />
          </datasources>
          <datasource-dependencies datasource='federated.0mawx7a12n6aqx14qz27917q3g16'>
            <column caption='avg(0.0)' datatype='real' name='[Calculation_553661290891546629]' role='measure' type='quantitative' user:unnamed='Donut Chart For Cement co2'>
              <calculation class='tableau' formula='avg(0.0)' />
            </column>
            <column caption='avg(0.0)' datatype='real' name='[Calculation_553661290891571207]' role='measure' type='quantitative' user:unnamed='Donut Chart For Cement co2'>
              <calculation class='tableau' formula='avg(0.0)' />
            </column>
            <column caption='Cement Co2' datatype='real' name='[cement_co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[cement_co2]' derivation='Sum' name='[sum:cement_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_553661290891546629]' derivation='User' name='[usr:Calculation_553661290891546629:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_553661290891571207]' derivation='User' name='[usr:Calculation_553661290891571207:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia (excl. China &amp; India)&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Oceania&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0mawx7a12n6aqx14qz27917q3g16].[usr:Calculation_553661290891571207:qk]' field-type='quantitative' fold='true' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:cement_co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7031491994857788' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0mawx7a12n6aqx14qz27917q3g16].[usr:Calculation_553661290891546629:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]' />
              <wedge-size column='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:cement_co2:qk]' />
              <size column='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:cement_co2:qk]' />
              <text column='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]' />
              <text column='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:cement_co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='4.798032283782959' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0mawx7a12n6aqx14qz27917q3g16].[usr:Calculation_553661290891571207:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:cement_co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9670165777206421' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#ffffff' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>([federated.0mawx7a12n6aqx14qz27917q3g16].[usr:Calculation_553661290891546629:qk] + [federated.0mawx7a12n6aqx14qz27917q3g16].[usr:Calculation_553661290891571207:qk])</cols>
      </table>
      <simple-id uuid='{A608B5B9-9C26-4D1F-9462-1DF7E7419AC9}' />
    </worksheet>
    <worksheet name='Donut Chart For Flaring co2'>
      <table>
        <view>
          <datasources>
            <datasource caption='localhost' name='federated.0mawx7a12n6aqx14qz27917q3g16' />
          </datasources>
          <datasource-dependencies datasource='federated.0mawx7a12n6aqx14qz27917q3g16'>
            <column caption='avg(0.0)' datatype='real' name='[Calculation_553661290894012431]' role='measure' type='quantitative' user:unnamed='Donut Chart For Flaring co2'>
              <calculation class='tableau' formula='avg(0.0)' />
            </column>
            <column caption='avg(0.0)' datatype='real' name='[Calculation_553661290894037009]' role='measure' type='quantitative' user:unnamed='Donut Chart For Flaring co2'>
              <calculation class='tableau' formula='avg(0.0)' />
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Flaring Co2' datatype='real' name='[flaring_co2]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[flaring_co2]' derivation='Sum' name='[sum:flaring_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_553661290894012431]' derivation='User' name='[usr:Calculation_553661290894012431:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_553661290894037009]' derivation='User' name='[usr:Calculation_553661290894037009:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia (excl. China &amp; India)&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Oceania&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0mawx7a12n6aqx14qz27917q3g16].[usr:Calculation_553661290894037009:qk]' field-type='quantitative' fold='true' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:flaring_co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.8350828886032104' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0mawx7a12n6aqx14qz27917q3g16].[usr:Calculation_553661290894012431:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]' />
              <wedge-size column='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:flaring_co2:qk]' />
              <size column='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:flaring_co2:qk]' />
              <text column='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]' />
              <text column='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:flaring_co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='4.284820556640625' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0mawx7a12n6aqx14qz27917q3g16].[usr:Calculation_553661290894037009:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:flaring_co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.8350828886032104' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>([federated.0mawx7a12n6aqx14qz27917q3g16].[usr:Calculation_553661290894012431:qk] + [federated.0mawx7a12n6aqx14qz27917q3g16].[usr:Calculation_553661290894037009:qk])</cols>
      </table>
      <simple-id uuid='{CEB7F230-7612-4144-BF39-691D4FD69CB0}' />
    </worksheet>
    <worksheet name='Donut Chart For Oil co2'>
      <table>
        <view>
          <datasources>
            <datasource caption='localhost' name='federated.0mawx7a12n6aqx14qz27917q3g16' />
          </datasources>
          <datasource-dependencies datasource='federated.0mawx7a12n6aqx14qz27917q3g16'>
            <column caption='avg(0.0)' datatype='real' name='[Calculation_553661290894966803]' role='measure' type='quantitative' user:unnamed='Donut Chart For Oil co2'>
              <calculation class='tableau' formula='avg(0.0)' />
            </column>
            <column caption='avg(0.0)' datatype='real' name='[Calculation_553661290894995477]' role='measure' type='quantitative' user:unnamed='Donut Chart For Oil co2'>
              <calculation class='tableau' formula='avg(0.0)' />
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
            <column-instance column='[oil_co2]' derivation='Sum' name='[sum:oil_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_553661290894966803]' derivation='User' name='[usr:Calculation_553661290894966803:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_553661290894995477]' derivation='User' name='[usr:Calculation_553661290894995477:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia (excl. China &amp; India)&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Oceania&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0mawx7a12n6aqx14qz27917q3g16].[usr:Calculation_553661290894995477:qk]' field-type='quantitative' fold='true' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:oil_co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.8790607452392578' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0mawx7a12n6aqx14qz27917q3g16].[usr:Calculation_553661290894966803:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]' />
              <wedge-size column='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:oil_co2:qk]' />
              <size column='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:oil_co2:qk]' />
              <text column='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]' />
              <text column='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:oil_co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='4.0076613426208496' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0mawx7a12n6aqx14qz27917q3g16].[usr:Calculation_553661290894995477:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:oil_co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.8790607452392578' />
                <format attr='mark-color' value='#ffffff' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>([federated.0mawx7a12n6aqx14qz27917q3g16].[usr:Calculation_553661290894966803:qk] + [federated.0mawx7a12n6aqx14qz27917q3g16].[usr:Calculation_553661290894995477:qk])</cols>
      </table>
      <simple-id uuid='{E7186F80-325A-4048-BFE3-6754D1EA792C}' />
    </worksheet>
    <worksheet name='Donut Chart for Gas co2'>
      <table>
        <view>
          <datasources>
            <datasource caption='localhost' name='federated.0mawx7a12n6aqx14qz27917q3g16' />
          </datasources>
          <datasource-dependencies datasource='federated.0mawx7a12n6aqx14qz27917q3g16'>
            <column caption='avg(0.0)' datatype='real' name='[Calculation_553661290892959753]' role='measure' type='quantitative' user:unnamed='Donut Chart for Gas co2'>
              <calculation class='tableau' formula='avg(0.0)' />
            </column>
            <column caption='avg(0.0)' datatype='real' name='[Calculation_553661290893066253]' role='measure' type='quantitative' user:unnamed='Donut Chart for Gas co2'>
              <calculation class='tableau' formula='avg(0.0)' />
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gas Co2' datatype='real' name='[gas_co2]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[gas_co2]' derivation='Sum' name='[sum:gas_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_553661290892959753]' derivation='User' name='[usr:Calculation_553661290892959753:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_553661290893066253]' derivation='User' name='[usr:Calculation_553661290893066253:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia (excl. China &amp; India)&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Oceania&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0mawx7a12n6aqx14qz27917q3g16].[usr:Calculation_553661290893066253:qk]' field-type='quantitative' fold='true' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:gas_co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9010497331619263' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0mawx7a12n6aqx14qz27917q3g16].[usr:Calculation_553661290892959753:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]' />
              <wedge-size column='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:gas_co2:qk]' />
              <size column='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:gas_co2:qk]' />
              <text column='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]' />
              <text column='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:gas_co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='5.5472970008850098' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0mawx7a12n6aqx14qz27917q3g16].[usr:Calculation_553661290893066253:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:gas_co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9010497331619263' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>([federated.0mawx7a12n6aqx14qz27917q3g16].[usr:Calculation_553661290892959753:qk] + [federated.0mawx7a12n6aqx14qz27917q3g16].[usr:Calculation_553661290893066253:qk])</cols>
      </table>
      <simple-id uuid='{DC9CAE67-9894-4D01-AF89-528F6A0253F9}' />
    </worksheet>
    <worksheet name='Donut chart for coal co2'>
      <table>
        <view>
          <datasources>
            <datasource caption='localhost' name='federated.0mawx7a12n6aqx14qz27917q3g16' />
          </datasources>
          <datasource-dependencies datasource='federated.0mawx7a12n6aqx14qz27917q3g16'>
            <column caption='avg(0.0)' datatype='real' name='[Calculation_553661290878566401]' role='measure' type='quantitative' user:unnamed='Donut chart for coal co2'>
              <calculation class='tableau' formula='avg(0.0)' />
            </column>
            <column caption='avg(0.0)' datatype='real' name='[Calculation_553661290878664707]' role='measure' type='quantitative' user:unnamed='Donut chart for coal co2'>
              <calculation class='tableau' formula='avg(0.0)' />
            </column>
            <column caption='Coal Co2' datatype='real' name='[coal_co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[coal_co2]' derivation='Sum' name='[sum:coal_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_553661290878566401]' derivation='User' name='[usr:Calculation_553661290878566401:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_553661290878664707]' derivation='User' name='[usr:Calculation_553661290878664707:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia (excl. China &amp; India)&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Oceania&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0mawx7a12n6aqx14qz27917q3g16].[usr:Calculation_553661290878664707:qk]' field-type='quantitative' fold='true' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:coal_co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.8570718765258789' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0mawx7a12n6aqx14qz27917q3g16].[usr:Calculation_553661290878566401:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]' />
              <wedge-size column='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:coal_co2:qk]' />
              <size column='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:coal_co2:qk]' />
              <text column='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]' />
              <text column='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:coal_co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='3.4806630611419678' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0mawx7a12n6aqx14qz27917q3g16].[usr:Calculation_553661290878664707:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:coal_co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.8570718765258789' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>([federated.0mawx7a12n6aqx14qz27917q3g16].[usr:Calculation_553661290878566401:qk] + [federated.0mawx7a12n6aqx14qz27917q3g16].[usr:Calculation_553661290878664707:qk])</cols>
      </table>
      <simple-id uuid='{C6DB2CEE-B5D6-493E-9EE8-ACD65FE71286}' />
    </worksheet>
    <worksheet name='Emission Rate by Internal Factors'>
      <table>
        <view>
          <datasources>
            <datasource caption='localhost' name='federated.0mawx7a12n6aqx14qz27917q3g16' />
          </datasources>
          <datasource-dependencies datasource='federated.0mawx7a12n6aqx14qz27917q3g16'>
            <column caption='Cement Co2' datatype='real' name='[cement_co2]' role='measure' type='quantitative' />
            <column caption='Coal Co2' datatype='real' name='[coal_co2]' role='measure' type='quantitative' />
            <column caption='Flaring Co2' datatype='real' name='[flaring_co2]' role='measure' type='quantitative' />
            <column caption='Gas Co2' datatype='real' name='[gas_co2]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
            <column caption='Other Industry Co2' datatype='integer' name='[other_industry_co2]' role='measure' type='quantitative' />
            <column-instance column='[cement_co2]' derivation='Sum' name='[sum:cement_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coal_co2]' derivation='Sum' name='[sum:coal_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flaring_co2]' derivation='Sum' name='[sum:flaring_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gas_co2]' derivation='Sum' name='[sum:gas_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[oil_co2]' derivation='Sum' name='[sum:oil_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[other_industry_co2]' derivation='Sum' name='[sum:other_industry_co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:cement_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:coal_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:flaring_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:gas_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:oil_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:other_industry_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0mawx7a12n6aqx14qz27917q3g16].[sum:cement_co2:qk] + ([federated.0mawx7a12n6aqx14qz27917q3g16].[sum:coal_co2:qk] + ([federated.0mawx7a12n6aqx14qz27917q3g16].[sum:flaring_co2:qk] + ([federated.0mawx7a12n6aqx14qz27917q3g16].[sum:gas_co2:qk] + ([federated.0mawx7a12n6aqx14qz27917q3g16].[sum:oil_co2:qk] + [federated.0mawx7a12n6aqx14qz27917q3g16].[sum:other_industry_co2:qk])))))</rows>
        <cols>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{24E680B7-60AE-46C4-B287-2D6CD81A6DE2}' />
    </worksheet>
    <worksheet name='Overall Contribution by india in co2 Emission'>
      <table>
        <view>
          <datasources>
            <datasource caption='localhost' name='federated.0mawx7a12n6aqx14qz27917q3g16' />
          </datasources>
          <datasource-dependencies datasource='federated.0mawx7a12n6aqx14qz27917q3g16'>
            <column caption='Cement Co2' datatype='real' name='[cement_co2]' role='measure' type='quantitative' />
            <column caption='Coal Co2' datatype='real' name='[coal_co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Flaring Co2' datatype='real' name='[flaring_co2]' role='measure' type='quantitative' />
            <column caption='Gas Co2' datatype='real' name='[gas_co2]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
            <column caption='Other Industry Co2' datatype='integer' name='[other_industry_co2]' role='measure' type='quantitative' />
            <column-instance column='[cement_co2]' derivation='Sum' name='[sum:cement_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coal_co2]' derivation='Sum' name='[sum:coal_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flaring_co2]' derivation='Sum' name='[sum:flaring_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gas_co2]' derivation='Sum' name='[sum:gas_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[oil_co2]' derivation='Sum' name='[sum:oil_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[other_industry_co2]' derivation='Sum' name='[sum:other_industry_co2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mawx7a12n6aqx14qz27917q3g16].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:cement_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:coal_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:flaring_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:gas_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:oil_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:other_industry_co2:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0mawx7a12n6aqx14qz27917q3g16].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:coal_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:oil_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:cement_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:gas_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:flaring_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:other_industry_co2:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]</column>
            <column>[federated.0mawx7a12n6aqx14qz27917q3g16].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0mawx7a12n6aqx14qz27917q3g16].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7471270561218262' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mawx7a12n6aqx14qz27917q3g16].[Multiple Values]</rows>
        <cols>([federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk] / [federated.0mawx7a12n6aqx14qz27917q3g16].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{3A25A68E-3B54-45AA-8F62-68ACC4175D4F}' />
    </worksheet>
    <worksheet name='Overall contrubution by china in co2 Emission'>
      <table>
        <view>
          <datasources>
            <datasource caption='localhost' name='federated.0mawx7a12n6aqx14qz27917q3g16' />
          </datasources>
          <datasource-dependencies datasource='federated.0mawx7a12n6aqx14qz27917q3g16'>
            <column caption='Cement Co2' datatype='real' name='[cement_co2]' role='measure' type='quantitative' />
            <column caption='Coal Co2' datatype='real' name='[coal_co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Flaring Co2' datatype='real' name='[flaring_co2]' role='measure' type='quantitative' />
            <column caption='Gas Co2' datatype='real' name='[gas_co2]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
            <column caption='Other Industry Co2' datatype='integer' name='[other_industry_co2]' role='measure' type='quantitative' />
            <column-instance column='[cement_co2]' derivation='Sum' name='[sum:cement_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coal_co2]' derivation='Sum' name='[sum:coal_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flaring_co2]' derivation='Sum' name='[sum:flaring_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gas_co2]' derivation='Sum' name='[sum:gas_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[oil_co2]' derivation='Sum' name='[sum:oil_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[other_industry_co2]' derivation='Sum' name='[sum:other_industry_co2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mawx7a12n6aqx14qz27917q3g16].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:cement_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:coal_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:flaring_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:gas_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:oil_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:other_industry_co2:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0mawx7a12n6aqx14qz27917q3g16].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:coal_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:oil_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:cement_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:gas_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:other_industry_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:flaring_co2:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;China&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]</column>
            <column>[federated.0mawx7a12n6aqx14qz27917q3g16].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0mawx7a12n6aqx14qz27917q3g16].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mawx7a12n6aqx14qz27917q3g16].[Multiple Values]</rows>
        <cols>([federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk] / [federated.0mawx7a12n6aqx14qz27917q3g16].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{EDA33F18-E5E6-46CB-A191-43AA882A2ECD}' />
    </worksheet>
    <worksheet name='Top Countrires Emission'>
      <table>
        <view>
          <datasources>
            <datasource caption='localhost' name='federated.0mawx7a12n6aqx14qz27917q3g16' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0mawx7a12n6aqx14qz27917q3g16'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([co2])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:country:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia (excl. China &amp; India)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-27&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-28&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-27)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-28)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='%null%' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]' />
              <lod column='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.9890055656433105' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:co2:qk]</rows>
        <cols>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{1A56F094-DCBD-4F95-BA8B-9BF11C8A8473}' />
    </worksheet>
    <worksheet name='Total Emission by continents'>
      <table>
        <view>
          <datasources>
            <datasource caption='localhost' name='federated.0mawx7a12n6aqx14qz27917q3g16' />
          </datasources>
          <datasource-dependencies datasource='federated.0mawx7a12n6aqx14qz27917q3g16'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia (excl. China &amp; India)&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]' />
              <size column='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:co2:qk]' />
              <wedge-size column='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:co2:qk]' />
              <lod column='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]' />
              <lod column='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0E78E7DA-10C1-4E39-BC99-B3731DDC4F07}' />
    </worksheet>
    <worksheet name='Total World Emission'>
      <table>
        <view>
          <datasources>
            <datasource caption='localhost' name='federated.0mawx7a12n6aqx14qz27917q3g16' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0mawx7a12n6aqx14qz27917q3g16'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0mawx7a12n6aqx14qz27917q3g16].[Longitude (generated)]' field-type='quantitative' max='45513368.213250369' min='-22816078.642886713' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0mawx7a12n6aqx14qz27917q3g16].[Latitude (generated)]' field-type='quantitative' max='17700740.25067547' min='-21709419.476670139' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]' />
              <size column='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:co2:qk]' />
              <lod column='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:co2:qk]' />
              <geometry column='[federated.0mawx7a12n6aqx14qz27917q3g16].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0mawx7a12n6aqx14qz27917q3g16].[Latitude (generated)]</rows>
        <cols>[federated.0mawx7a12n6aqx14qz27917q3g16].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{67936AD8-38E6-4B16-A766-59A6CAFD9A9C}' />
    </worksheet>
    <worksheet name='co2 Emissioin in 2020'>
      <table>
        <view>
          <datasources>
            <datasource caption='localhost' name='federated.0mawx7a12n6aqx14qz27917q3g16' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0mawx7a12n6aqx14qz27917q3g16'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([co2])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:country:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia (excl. China &amp; India)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Micronesia&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Oceania&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='%null%' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:year:qk]' included-values='in-range'>
            <min>2020</min>
            <max>2020</max>
          </filter>
          <slices>
            <column>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:year:qk]</column>
            <column>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk] * [federated.0mawx7a12n6aqx14qz27917q3g16].[none:year:qk])</rows>
        <cols>[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:co2:qk]</cols>
      </table>
      <simple-id uuid='{70BCD00D-3E4A-4E91-BDF6-5F1A189E7DA0}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Total World Emission'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:co2:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AC534D75-2234-4033-B310-48C64C436297}' />
    </window>
    <window class='worksheet' name='Top Countrires Emission'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]' type='color' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{803CC563-41A3-418C-B2E9-E651A4C80FF6}' />
    </window>
    <window class='worksheet' name='Co2 Emmission over Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:co2:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7566F0D1-FC7B-4C72-90F0-784A301212D5}' />
    </window>
    <window class='worksheet' name='Co2 Emission india vs united states'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]</field>
            <field>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EB718F01-9459-4580-AB17-DAF3A3EB045C}' />
    </window>
    <window class='worksheet' name='Total Emission by continents'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:co2:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{50DBFE16-E190-44AA-8EC6-3354E419FB9A}' />
    </window>
    <window class='worksheet' name='Co2 Emission Per Capita'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8189FB28-FAF7-4DE5-A1D1-C5EEDFC70BD8}' />
    </window>
    <window class='worksheet' name='Co2 Emission by Other Factors'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]</field>
            <field>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{859EF47D-CB4B-4066-8D36-4EB2123A78B7}' />
    </window>
    <window class='worksheet' name='Emission Rate by Internal Factors'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6334A12A-A751-47D1-8561-DA41829C7249}' />
    </window>
    <window class='worksheet' name='Donut chart for coal co2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]' type='color' />
            <card pane-specification-id='1' param='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:coal_co2:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5B60E2BF-51EF-4449-90F1-0B982F260610}' />
    </window>
    <window class='worksheet' name='Donut Chart For Cement co2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]' type='color' />
            <card pane-specification-id='1' param='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:cement_co2:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1A5D9382-1F24-4456-855B-DA4598339CB2}' />
    </window>
    <window class='worksheet' name='Donut Chart for Gas co2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]' type='color' />
            <card pane-specification-id='1' param='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:gas_co2:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DEF9CA61-7865-4525-BCB4-EE4DE684FB1E}' />
    </window>
    <window class='worksheet' name='Donut Chart For Flaring co2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]' type='color' />
            <card pane-specification-id='1' param='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:flaring_co2:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5BD6482A-7118-4CBB-9160-33DB793CECF2}' />
    </window>
    <window class='worksheet' name='Donut Chart For Oil co2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]' type='color' />
            <card pane-specification-id='1' param='[federated.0mawx7a12n6aqx14qz27917q3g16].[sum:oil_co2:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{58E923AF-E1D9-424A-B875-7CA5FC8B5BBA}' />
    </window>
    <window class='worksheet' name='Co2 Emissioin Over Past 10 Years'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]</field>
            <field>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FDB683F3-7C8E-4884-BA29-3E03397D1656}' />
    </window>
    <window class='worksheet' name='Overall Contribution by india in co2 Emission'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0mawx7a12n6aqx14qz27917q3g16].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0mawx7a12n6aqx14qz27917q3g16].[:Measure Names]</field>
            <field>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2CBE0713-BFC0-4FD5-BB16-FB61B6D651CD}' />
    </window>
    <window class='worksheet' name='Continent wise contribution by internal factors'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0mawx7a12n6aqx14qz27917q3g16].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0mawx7a12n6aqx14qz27917q3g16].[:Measure Names]</field>
            <field>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D1AD50BC-8085-421D-9D7E-DB4272B3826E}' />
    </window>
    <window class='worksheet' name='Co2 Emission from 1990 to 2020'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0mawx7a12n6aqx14qz27917q3g16].[Multiple Values]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mawx7a12n6aqx14qz27917q3g16].[:Measure Names]</field>
            <field>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1CA236C6-0F66-4D83-8E97-087E57FD3193}' />
    </window>
    <window class='worksheet' name='Cummulative co2 and co2 per capita over years'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0mawx7a12n6aqx14qz27917q3g16].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mawx7a12n6aqx14qz27917q3g16].[:Measure Names]</field>
            <field>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D0680EC3-8390-4723-8697-F5847E810678}' />
    </window>
    <window class='worksheet' name='co2 Emissioin in 2020'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]' type='color' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]</field>
            <field>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6EDC6A82-7C08-4AE4-8427-B14F7A288499}' />
    </window>
    <window class='worksheet' name='China vs India internal factors'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0mawx7a12n6aqx14qz27917q3g16].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0mawx7a12n6aqx14qz27917q3g16].[:Measure Names]</field>
            <field>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{48E9BA44-A030-4FDF-AC66-F4FF5019FB2C}' />
    </window>
    <window class='worksheet' maximized='true' name='Overall contrubution by china in co2 Emission'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0mawx7a12n6aqx14qz27917q3g16].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0mawx7a12n6aqx14qz27917q3g16].[:Measure Names]</field>
            <field>[federated.0mawx7a12n6aqx14qz27917q3g16].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{13BAF9D1-94FD-41CA-BAF0-F3A6A6393292}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='China vs India internal factors' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Co2 Emissioin Over Past 10 Years' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Co2 Emission Per Capita' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Co2 Emission by Other Factors' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Co2 Emission from 1990 to 2020' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Co2 Emission india vs united states' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Co2 Emmission over Time' width='192'>
      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
      3GGGuX8tkwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Continent wise contribution by internal factors' width='192'>
      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
      Ezqr9x9lYeYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Cummulative co2 and co2 per capita over years' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2d2W9jaXbYf3fhvoiSKJEiVVqra+/q7ull3G7M2B5nvMSBYTtGECDJU/6A
      JECAAHmawP9AgLwF8WOWl8zEcDzx2DNjtz091d3upbq6Syrtu0RKlLhvl3fJAyWqRN5bJZWk
      klT8foBQda8Oz3e+w3t4qe+c71zJsiwLgaBLkS/aAIHgIlEP/lMqlTAM41wGqdfruN1uJEk6
      lrxlWceWNU0TWT5eHF8G2ZPM7eDmLPx2frLSy/gKVCwWCQQCxzLKNE2AY8laloVhGKiq+lxZ
      AF3XL4WsoijHulC7wRcXLSu+Agm6GhEAgq5GBICgqxEBIOhqRAAIuhoRAIKu5nhrRZeQL3/4
      SxpVDcsykSSZ13/vXXyRwEWbJbhivHAAZDMp5ta2effeOB9/PkNyZASjlCFXrjM2kmRxdZNI
      3yCTo4mztLdFenaDerHaOr71j97Edy4jCV5lXjgAeqNxQpkshgF+v5tSqYgLNzfG+pmaXuPu
      +2+zMTeHaZqYpomu68dO6MBhEugZgkcODcNA1/VnvuQkme7zkn3uvJ7i2L54SvfzfHDAZfDF
      ZZB94QAoFXJks1lKsRj9ff3s7GaRVYv1rSqxeISVhSUsS0GWZWRZRlXVs80Et2VSFUU5Vvbv
      uBnC85I9z0zwSewQsvtyx9bYhqwo3LxxE48/iCzJDMRiKBhU6jqhgJ9SoYAvFHpR9QLBS+GF
      A8AfCOHf/5vT53G31IVdHgBCPT2ntU0gOHfEMqigqxEBIOhqRAAIuhoRAIKuRgSAoKt54VWg
      p7frPWtT2XG36AkEF8ELB0BuN83UwjoffPsd1he+IVX2ElYrlKoNkkMx1rf3CIQi3L4+epb2
      CgRnyqlKIfoyWSr5HbI1CcnUkF0BbiXCPJ5e454ohbBFlEJcLtkXDoCdrXVWV1eJ9PYTjQRY
      2ihgeQyeLOYYHYvz+MuHhMJ9ohSiDVEKcblkXzgABoaG+e2h4dZxYvjo72PtJwSCS4hYBRJ0
      NSIABF2NCABBVyMCQNDVXNk9wXakZzdIPVlvHfePDTJ8f/wCLRJcdl6pAMhv7rH8yczhCcty
      DADTMMmtZw5PSBJ9IwPnbKHgsnGqUoharY7X6ya3t4cnEMYtW5RqDXpCAQq5LIFwBFW5nN+y
      GtU6f/9f/7J1LMkSv/8n/+oCLRJcBKcqhXiyvMV7b9ym3miw9GQGvwtkWSLv9lKVXJjbWe7c
      nDxLe18IXdOxTBPDMLB0E8X1St34BKfgVKUQkUwWxeWlXsohqS4Ul0piIMTU9PqFdIVof41p
      Wei6zkd/+hNy67ut8+/+y1+nJ9HXoVLXdTa+XqaYzrV67cdvXyOS7H+mKaIU4urKnqoUIrWV
      ojfSS7luIqGgSg1ml7d47dY1ph8+JNIfO3UpxNLHM2zPbbR+f+2tSRL3Rm1LIdr1y5KEqqpI
      2JRNKErH2Kqqsv1kg81vVlrngn1hoqOx59otSiGupuypSiF+Y78UIh6Pd/z+7b7BF1V9hHwq
      e2Rlp1f8oSo4Q8SX4Qsmv7VHo6q1jkODETxB7wVa1F2IALhgHv+/z9lZ2Godv/PPv0vy9bGL
      M6jLuJxrlALBS0IEgKCrEQEg6GpEAAi6mhcOAMsyyWabCaPN1SUyuRK1coHVjTSWZbG2vEit
      cT4P3r6KWJbVXKu3Do8FF88LrwLld3eYW03xrXs38PcOsLa8jCJL9IY8zE1lCAxdY2Funrt3
      bp6lvVeWUqbAz//zn7WOPQEvv/Mf/9kFWiSAUwRAJBojlNlDUd1sLzwhMTLGXnqLUDDI5maB
      xO0QlUz61KUQltVW3nCQ7j9BKYSFTQcJm3S5rusdn8ym2ew2sfbl4pHfJV8fQ3EpLX3Po13G
      chzvsJxBlEKcv+ypSiF2d3fZWFshV9ZQ8wX8bomF9Qy37k0y9+gR/bHkqUshJKmtvGFf13mV
      QrSXKMhys9vEN//3U0z98EJM3LqG4nE3v9pIJrIkI0kSkmxf4qC0jSc5jie30viiFOJsZC3T
      OvJBI0kSWrXOR//tJ6crhRjYL4UYfqr3VXL/3zfffONFVV8ZHv/kcxZ+MdU6fu3XXufOb711
      gRYJ7Hjys4fM/u3XrePJD+5w/Tt3KW7nRSZY8OpQL9dITa9hmmbzTupxPTerLgKgy/j0v/8t
      xe3Dcu+3/umv0jdyNoWLF01lr8TDHz1oHQf6QyIAuhW93qCwnWsdK6pCz1AflVyJUqbQOm9o
      3b1ULQLgFaWQyh7Z8hkcCPOb//YPzkT3j//kfx35o/L7//6PcPs9Z6L7ZSMCQIBW1Zj+qy9a
      x7Kq8Prvveso36hrPL2ybFkW+VSWyl4RwzBQFIVgtIfQoP2DEi3TwtB1DN0A0wIkVLfKwkdT
      R+5OY+/doGeoc+feWSICQIChNVj+dLZ1rLieHQB2rH42x+KDJ63jm9+7z63ffNNWtrCd42//
      y5+3jr1hP7/9H/6Yrak1dpfTrfODryUubwDoWpWtnRzXEnFSG6v0DF6jUcqQzlWZGE2wOD/P
      YHKcHrG548pSK1bQNb31qe4JeHF53c9/4VM8/D8PqJdqreN7//idszbzVLxwAFRrdXb3dknG
      +inmd5F7EuyldxmI+Jl+NEXsxi02V5cJ37oBPFUL8xwOZA5l215jOdXRWB0Z36N6jp6zU+Es
      a9mZYW+DwxwddT/D5k5fONPxmk7T7G3A2Rdf/dknpKbXWufe/MP3GXn7uv34DjbtzG1SyZVb
      5278xn1km2Rh0zar7dzReT3PD06+7Hzd4bkXDoBQOILHtYWsuuntCWHSzJq6XC4aDQOPx40i
      Nx+fdFAOcRza5dqNP9DXPlfTNB1l2x3T0mEztuN4p5AFsNrnta/Dbh4HOo7rs73VHUzDxLKa
      69+RZL+jze1Xu2VamJaD7An8ZqvXNDsuScs0MaXOzLatrGU+VRLj7NundR894fQ+HcqeqhSi
      WCiS3t4hvZ1Drm4yGPKyul3k7pu3mZ16xEByvFUKYVeqYMdBaYBTKYQkS82ygrYPEVlWkNtl
      paZseylE055OW+y6NRzY3j6eIssdspIkd5Q8tPTYlEI8czw6feHEZ//jQ7RKvXX8m//uD1Da
      XyPtl2PYjWejv2lD2/xk+/nJdr7Yf5/s5ic5jGf/PjXHsyzL0beH8m2/l+xLZCRJar0fZ1IK
      ERs87NQwmGj+e+/+q18KIbg4tqZWMfXDHMbgjeQzpJ0Rq0CXEMu0yCynW7dpSZaJjse68omb
      pmGyu7KNaRjIioLb56ZnqI+v/uzjI39cf+/f/P6J9EqWxYBPEgFwHjz80QOqhUrr+KQrH4Zu
      8Ms//asj5/7Jf/oXLH8yw/b8YQeJ0Xeuk7j7aj+F02joR3wRnYjzwb/+rRfW55YhvLeD62d/
      RyIgiwA4DzJLKcq7xdZx43v3T7x8aEchnWN79rBL3sBEZ0MygT1ht8R4WCbkliASQHvvdb76
      7M/FnmDBq4tkmrC8xkQ+xa0+hXTF5KNNnS3ZD75mfkrcAQSvHF4FRsMyQ2Ed0hmW1RBPUju2
      suIOIHg1MC3cxTxvDyq8HVOpGfCw4oZvv4UZCDi+7IXvALVSjqWtLLcmrzEzPU2oP4HbqpDO
      Vbl5fYSZ6RkGhycY7Au96BACwXNRJBgJyXg/+piG6mKpYLJXaya+As/uag+c5gkxigfLqFHY
      3qI3OUk+vUYZiZGBIN98OcXEW2+RXpwjGglgWVbz4RTHTOk/nb7uyOKZTV22GVSrM4tsGEZH
      Jtg0TQybrKKdjeb+gzWOl3k2bTdkm6aJaXRmgp3GM00bHXay+/OzHc8mK+roNwdfdGSCTef5
      2WXFneZnt5rr+D4Z9rZFPBIxr0LEI7FVNqn/yjvUdYu9Tzc75myadhnt5jxeOAB8Ph8SzWxd
      Q29gmBYSzS4Mqkuh0Whg7O86AvtsoROSJLVk21/S+p3T+aMn98+1Z2wlZBtb7HTY6qWZ6WzP
      XDrJyg6b5Z3n0fnN1C57KknY23aS8WSH+Tn4zVG247yz3xx9b3Pu6bohlwz9jTLyX/4No26d
      5ZzJNxkLExhWXUhGo92EfZvb9R5WGJyqFKJWraG5k2g7W0RjCdxWlXSuyp37d1iYm2MoOd5y
      WnMyJ+8K0fmO2ZcGNB0otYs2A89O1u5CddAry7KNGZ0XEzjM0S6wWrYd/yLr1GE/np0vHP3m
      cKE6zcN5vA5R+xIJ7ILlYDx7X4RcEmM9Mn0eiXLAjfTdX+GrRz+mXm08JWv/YWD/wXs45zMp
      heiPhPfPhunZ/95149adF1UtEACg7GRQU2vc6VdYKRh8k7Hon3CRDAXPbAyxDCq4VHgUSAZl
      kkGZQLmAfvcGn/xs4dzGE8ugggtHwoJ0htueGu/GVSzgH1I6e2MTEIue69jiDiC4MNxy89N+
      OGzA9CxrZVjZOF5rx7NC3AEELxfLwlMq8caAwreHVGQJvi6r8GvvU1Jf/vZZxzvAwTruwYYW
      geA0uPY/7f0PPsX0+9gomTyqNlf+vWFsV4ZeBo4B8Mnf/5Sp2Xkm7n3Ar//K/Zdpk+BVwbLo
      9UjcGFAIuZsJK+3bb2O43WR+ufb8178EHAMg1D9EMp5DlZ+dvTWNBksLC/QMJFt5ANEVortx
      KxDc3YEf/4yEXGcpb7K7/2mfVNTO9MkFYvvdxrIsgsEA3//dP+RaLPJMBbupDUKDw2yuLbOZ
      3qXPB9OPpogMT7C5ttKxq/+kP5e6K4RN6wVb22xstg502/dTsLfNQYetzcewYd/iY/sCp84M
      VjOF1eeVeGtA4b2Yij/oxfq193lccZGpHtpj0TmPw/E6Sxac5mdj2tl1hajm0vzFX/yYa9dG
      uH73W3YiLfoGY8zNL1Os1Bno9Zy6K0S7wcfvCtE50XPvCnFcvZbZ2bGA53eFOKL7OV0TjnP+
      PLpCeBTg8TQTuU12wzJrRZNM1eK1G0F6fF6brhAWptR5odp3hbDz5wl83OoK0a73OV0hUqkt
      bt28QXo7Q7lSsRM5MgiWweT115C1/Km7QjzvARnOXSHkS9sVQpblE3WF6OhuQLOrRIes43jK
      uXaFkCWJqBdGwjIeRUL1+5jzR1mYLjwle7ZdIZ6eiN2cFVnGcuwKYVML9qyuEBO336Je/5hi
      qUJv5NlfgRS3j1t37u0f9YiuEK8wUrkCDx/zwZBCQbNYyJnk6ha/PTGGtVJ4voJLiONHciZf
      5v79e0x9+SnFp3rOCLoLCYj7Jd6Lq8R3NsDn5ZOUwVc7Btm6/V8wVwnHAIj4FH7yk7+mgUJd
      aziJCV5V8gVGlTrfSapEfTLTewapsetwcxLNvOqX/SGOy6C5qsHYSIzwQJxo5Oyq7wSXF0WC
      Ab/EaFiCB1+QK2ksbOkcPBvQulQLmGeD4x3g5u3XGRoYJDoQe5n2CC4ApVbjVq/CBwmVfq/M
      XBH4nV8n7wuhH2/x7spiewf4h08e8NZ77zPQ38Mnn30NY0Mv2y7BOSMBAz6JwFePkGWLcsPi
      F5sGpkXr+cfdgG0AjMR6+dH//iEKJnfe+eBl2yQ4LywLrwLRHpmhgEypYdG49RpScpC1z354
      0dZdCLYBEBu7xR+P3mxu5XuOArNRY3pmjkBkgIDSONIVYmB4gpjoCnEpCJg6PPiMO0qZZQs+
      TetoBvyqx4e7C3uOHuD4N8Dnnzyg3nj+F8B6uYAhuynkc2QL1VZXiJHb98nvbLWyq4ZhHOvn
      oAvDwc+5dYVw6DZw3K4QxhXoCqFKMByU+SChMhmWMIYTfFHzsVQwOXg45EV0hXAa7yTvk9Oc
      jxrx/K4QjgEQjfj45YMHrGxsO4nsD2yg6waapmHqGju7eSJ9IbY3N9BRjmyIP85Pu6xdVwjb
      TeoOXSGcNlvbPaXEdhO3w0Zw2aErhK2sQ5cG53kcvytE+3huGdSlFQJT09zqa36Xf7it86ik
      IF9LQHuvfIeuEM5+s98Ub9cVwlbWoSuEU/MCp/ep0wabze+tjfntssfoCrGW3sXlcrG1tsJo
      0vlByoHeOGOmiifYg1s2KFYa9PaEyO7tEhpOPNXexN7RnRORjvxr1xXCsWuCTVcIp3Ybzq1A
      HGSP2RXCdo4OXSFsbT5hV4iD+UU8EqMhmbBHwq1IFMbH+eapkuOg0/yc2pcccx4t2zpFHW22
      q/0/cRsWh/FsbXtGVwjHO8BoMkFqbZPo8JiTSGvkvugAAa8bl9tHXySMJEn09Udx2dTbCM6Q
      hg6zi7wXhdciCqmKyS82dGpjYxDwX7R1VwLbO8DS1Jd8PjXH3Xd/g+vDA3Yiggsk7JYYCckk
      UyvQM85XuyaF8svdS/uqYPsRvZHaIh4f4pMPf8zC6padiOBlozUYpM77Qyq3+xQyNZOt0Ul4
      +3VqlrjTvii2d4A333mfbL7E6OgYwbBYxrxIIp7mp7381x9i5uo82tE5+LDvf8WztC8D+x1h
      WpXFtTRDyWG0Wull29T1SLUao+Hm8uX1iEyqbGL97vfIRKKIbzpni+0dYGpugbFoDz//6HN6
      PA1iMfEonvNGAvq9EqGZJ0iLEi4ZvtjWqe5f8JbozHEu2AbAzfFxzPAg1/XH7DScHy4gOCWW
      hU+B1yLN0oSCZmGMj2Leu878p//zoq3rCmwDIBIf5rOPfsbGTpHk5N1nKqhXCiwurZEpVIn3
      uClUG1xLxFnd2iHU08/NyWvnYvhVRpUg5jbg5x8xWs+yYsCDLZ2GCe+4fYS6uDThZeOYCNN1
      g0DQj64/ezOMxx9mON5LeHCYSnaHWxNhHk+vce/9t9mYm2ulqHVdP9ae4IPU+UFa22orbzjQ
      1b7T+aCM4ois1XxeQXuK3TAMdJt0uq7rNql7Y3+8o7KGYWC1p9gPbGvDNAxMXadnf/ky4pUo
      WAr6/VtML5XJFNNH5mcYnToMXe/Y9H3gi/btKYZhYLSVU1iW/fwM07AtLbD1hWHYzs8wDMwO
      v1mO48md29/tZQ0TXW+bx76snQ3t8ziYc+d1cehj2wCYfvw17373+xj1CrMLz2tgZLGxnefG
      rSHmtpeZXcpzbWSAJ4++xucPtUoaVFU9k03xB7ras4l2m+5lSUJV1Y5sq6IoqDYbq1VVtdnE
      reyPd1RWUZSO8gbpwLan8CjgWVzBn89yPSKzUTb5ZtfCHVAZG4h2lDg0N4J3vi2KqtrKNufX
      aZvStkFckuznp8iK7SZzW18oSsf8DsZrL2+QZclxPKkjQeogq8ioanszAcnRBks5GkAHc+68
      Lg59bBsALqvGT3/+IR7qBGOTdiJHuHHrFrIkcePO65imhSzLDA4lu7alokuWGApIjIQUVBlc
      IT+V18b5/LO/vGjTBG3YBsDk3XcYSO6ho9IX6XmOComDD8JmW5Dm/+0+VV5lZMBTyMPffcyb
      AY0tXWJqz6CoWXwnHj+TB2ULzh7bAJAkiZ7eYzxiT0Bo/3t9v1dCkRtw/Taf/cMmpWztok0T
      HIPu/I5ySvwqyNNzTOa2uNUrk601n0C+HoxCIoYlVnGuDOIBGcfELUtE9x/dI0sge10s+KPM
      prMXbZrgFIg7wDOQAHV3Fz78mPcGZYIuiW92dR5s6ejjYxhu10WbKDgl4g5gQ49bIhmUGfBL
      uI0a3H6dX/xsvmNbo+DqcyZ3gHq1QrWmYegNypUqlmVRLhUxrlAHMY8CTM1y28hxs09hr9bc
      XLI9mITBqM3uL8GrwKnvAHolx5PFLRJDQ+ymVjEtCAWDFDQLiR3u3Jg4CzvPBQkY9EtcC8l4
      VRl0nTkrwGoqf9GmCV4Sp74DFPb2qDd0VtZWUVx+RpMxUptZxl+bxIVxpBTiOD8HKe2D4/Mo
      hbD2siiPHvPdpMqAT2YhZ/LRlo5+5waNtizsWZVCdKTpcSq9ePVLIcyO8S5ZKcRJ6BkYREnP
      4vYHUaw6M0tFJm8kmX74kJ7egctRCiFJeBWIB5qrOD17O5ijw3y0qaPv+1xySN2fthQCmiUE
      7YlBCafSC1EKcaj3gkohToLiCfL2251PkemLXoI9BIYBK+vc9WpIcZXNksmX2zr3v3+DSKKv
      dfELupdXbhXooEXIcFAmXkxDysdiCTa3xFYqQSevTB5AKhSJVbJ8J6ky0SOTqpgs9Cbg29+i
      qog6HIE9V/YOIAFepfnw5VhAxr+wwFbN4ustHW3/b56A+IojeA5X7g4g1TWYW+TtXou3YyoW
      8EVap/zWm1T6oq2LXyA4DlfmDtDvlZjsUejd24IhP49zFrmC+F4vOB1X5g5gWjCTNVgbGoXX
      b1MVzaAEZ8AZXEUGq4sLbKYzaNUSm+kMlmWxub5K/Qyfr5OtW+S1q/9UQsHl4tQBYJSzbOZq
      hENB5heXMSt7LMw8QXcHmJ+bPwsbBYJz49R/A0jeCDdGYW52jqDfR6QnxJOZdW7f6KOe2xNd
      IRClEO3jXfquECdB16qkUil8wRBepcHC2ja37k0w++gRfYOJy1EKcYFdIUCUQrSP90qVQrh9
      Ie7cvdc6PmiD9dabvadVLRCcO2IpRdDViAAQdDUiAARdjQgAQVcjAkDQ1YgAEHQ1ZxIAWqXA
      1k6OUi7DwvIapqmzMDdDsVI/C/UCwblx6gCwLIulpUV2d7OsbW4Tdhk8+XqKYHyEtZXlI9k9
      y7Ke+9Mu15GChY6M4fPs6zxpp9VJr3WC8Z4ha2eGZXVkqZ+h2v60w3jHnZ/T+PZ+O4kv9nUc
      d3on9NtxhZs+dpY9dSKssL3GXqlOobLFeHIAr9dDra7j93nJKxKWZe2n941jPSn+6SB4+t8D
      DnS1z8o07UshDMPoeJNN284E++UNNil9u/EM06YUYn+8dkzD7CxN2B+vcx6mrY5m6YVdSt+w
      LYVo9wWW0/yeMV67rOUsa1cKYed7p1IIu/EMG9ss7H1sGCZG25wty95vlmVi7Dc5O31XiNgI
      7w8MsbWdR9ZLLKfy3L1/k9nHj4gmRlulEHalCnYcvxSCtvPHL4WwK00A59IE21II2aYUQnIq
      hZBPWArRaZuiKp2lENKzSiHafH0WpRDySy6FkGWUY5dCyFgO5R/t10WzjX9T9mw2xMguhuJR
      IEpsuHnq9TfeOBPVAsF5IlaBBF2NCABBVyMCQNDViAAQdDUiAARdjQgAQVdz+kywabC2vESu
      WGl2hUidT1cIgeA8OHUAmIZOJBplaWGe+YVlzOoe80+eoLuDzM+KrhCCy83p26O7PGRXl5Fd
      HlwuhUhPkFRqg9s3e6nndkVXCERXiPbxXqmuEFq1SKmmoygevC6LhbUd0RWiDdEV4uh4r2BX
      iLutY9EVQnCVEKtAgq5GBICgqxEBIOhqRAAIuhoRAIKuRgSAoKs5k1KI5cU5tnayoiuE4Mpx
      BqUQBgNDw2RSG82uEO5mV4iQ6ArRMabdeOfTFcJe68V0hTie/JXtCiHLEisL84xOvkZqfQ2v
      p9kVwufzol5wV4iDLg2vRFcI8yRdIcxL1BWicx4n6grR4bdL1hWiVspTa1hkMnv0+N2HXSGm
      HhEdGrvQrhDSq9QVQunSrhAdfrtkXSF8PVG+9Va0ddzqCnFfdIUQXH7EKpCgqxEBIOhqRAAI
      uhoRAIKuRgSAoKsRASDoak4fAJbJ4uw05brBbnqDqSfz6I06U988YidbOgMTBYLz40y6Qqiy
      SVkzyeRKJPt9PP5qisSNu+xtb7ZKGg4yjs/7OdhEf7jJ+XjZVssyOzKJTplgy7TJlPKc7Gd7
      xvYZ43XYZlqdWWqH8Q581Y5pHn880zQ7MrMHmWC7eZhme2YWe987ZI2fZZudP9szswfjdWbs
      7X1hb4OFaR0v+/20j09fCqG68XvdmPsDmqaJJEn7Tjkqe5xSiAMDnyVr/zt7+aas1H7SVl6S
      pA7dEp3nDn/TaYGtrGRvnSTZ/8JBhb1eG2En1znOw9YGe7/Zj2fnTwfZptG2Ojo0SNjodZ5z
      x1kH/zxtwqkDQK9XSO2WkGubDPWHSeeq3HnjDvOzMwwmJ1oX1UFJxPM4CKBD2fZyA8lWj+3F
      uy/b6VgJWe50jJNeWZY7Sy8kmzfyWba1p+P3x2t/25vzsNEhy7bBaT+e3FGagITjPOwukmf6
      wua8jSua87N5T5zHs3v/jm+bnd9sbeBQ9tQBoHr83HvjrdZx70Dz31t37p1WtUBw7ohVIEFX
      IwJA0NWIABB0NecSAEa9zKOvvmJzO3se6gWCM+NcAmB7fZPxe/cp5XbOQ71AcGacSwC4XRLl
      cgVdP/7+UYHgIjiXAOgbHqe6vcnI+Ph5qBcIzoxWHqBUKtmmmF+UvoFBDK1KXqtSrVZPvCm+
      JeuT8cVDrd8bqkU+n8czEEAOHKYxKvUKhss6Imv5ZPL5PGqvB59+eL5m1CmWy0dkJVkin88j
      BdUj5xuyQT6fxxsLYRmHqfZSpYzlkY7Imm7I5/O4+/2YrsM5VbUaDfQjsi6fm3w+jxx2Hzmv
      WQ2KpeKRcwDFYgH8ypHzumo2fTEYQKm5W+fLtQp6Qzs6Xo+ffD6Pq9eLzzzqCypHfSGrStO2
      kOuoL9DJ5/P44uEj3R5K5RKWt+19ch34woflOXzfK1oVST4q6w54yOfzKJGjvqibnb5QetyH
      73/w0MnlWhWzcdTH7nBzzoabo9eFV6JUKeGLh5Csk/S5eEGKxSKBQOCFNsU/i4OaDrtN3XYY
      hnEpZO2yk3Z0gy8uWvbUmeCz5rj1Qgcc5+K4qrLCF+cve6UD4KQXyHnpvmqyl8WOyyCr/OAH
      P/jBsaVfEE3TcLvdtobtpjdYWEsTVA2ezC9Q0Qyy25tMT8/Sn0iw+uQhFYKEAx4Ke9s8nlum
      L+hh6sks+XKdSm6HudkZFH+Qxbl5LNlNMODD1Ot8+flnBPvjrC08YWV9C7cqs7y8zOb2Htn0
      BmubOwwOxZBMg5mvPqHhj7O3vsDyygouj5uZ2XkK5RrlbJrl9RR9/VEUWWJp+kvypo/K3hZL
      S8tIbi/zMzNkciXQSiwuLaF4e/B7XWyuzLGZrSLVC8wvLmEoHpZnp9nayTE4GKJZYSYAAAbS
      SURBVOXhpx8TiMbxqAqZ1DoL62n8ss7M/CJVHVJri6xupAkGXMzNLqB4A/i9bvK7aaYWVukL
      uJh6MkuhopHb2WBtbRMZk7nFZco1nb5IGFOv8/nnn9MTjbMyP83qRhqXZDC/tETdVNheX2A9
      nSU2GAVD58lXn2IGY2TW5lleWUNVVeYXFijVDCq5NItLa4T6orgUiaXpLyhYQcqZDZaXlsDt
      YXF+jmyxSn8kyINffMzQ6DVkYGNphlRBw6rmmF9cwlRdLM/Osp0t4JEaLCyt4Av14nEp7Gyt
      sbS5g1fSeDw9g+LxsjA/R65Up7i7yer6Bv5wPx6XwtLcNEsrW7hVg7m5BSS3n9X5aXZyFax6
      nrmFJbyRAbwumVwmxfziIpohs7o0d/GZ4N6BIVRJJ58v0BuNsbu9zfj11+iL9mMUM1guL/V6
      84/zYCSKzy1TLRfxhXrJ7Wa4Nj5JqKcXI7OBpqiUymUAJMVFfLAX3TCp1g2Cikld8TPUGyA+
      PEK9Xqde3+9dKslcGxqg3jApV2sM9gdYX0mh6Qb1ehXNUBmP9ZIrVQFIJoZo6AbFcoVYvJeN
      lU00rYFWrxONJwj43K1qzMGhYSxDo1AsMTA4QHpjk3q9jlavk0mtonpDGEbzz7C+wQQqOoV9
      X2RSW01ZTWN9aRlTbi4vA4R6B/C5JMqlIoFwH9nMDlq9TqNRR9c0NN2kXtcOfRGNoBsGNc3E
      j87S5g79AzEyqUVQIkTdChUAWSEZ76euW1RqdaIRL09mlgn3DbC3kyYxPILbpbQ+zJKJONpT
      vlh8soDbF6awt8va6jK+QIiDpYPYUBJL3/dFbIDUyiK67EPL5ZhdXkXCoFKtAdAfS6JYDQr5
      IoOxMLNTC3iDEfK7O9TrdfSGhr6/j2F4ZBSXqrCXLXPvjTvsbS3hCyXwSwaZcoM33rjBzvo2
      AD39MSJBL1qtSE909KIDwMIwdLSGRjSewKqXcfkC5LfXCQ8mqZSrlPJZtjMZoNmHVGto+CNR
      /KqJ4vZQzWfwhKOEeoKEw/1oleKBavSGjqabDCcGKWkNgl4X6XydwZCMpQbo9cpUjaZwo9Gg
      0WgwnEySyxVRFBhMXsPU6jS0KtlCEbfL1ZTVdRqaxnAySSGbx+NVCPTGUMwGC3MzBPuT9ATd
      zfnpDRqaRjyRpFYq4POryJ5eAqpFrqKRz6bZ2c3uy+77YqjpC7fXjSn76Per4PURHYhTLuaP
      +CLYO4BH1lHdHjRDIhGNsLG5w/DYGFp1f0eetT8/3SKZGKTc0JmcGEevFnH7e6nXC+Rrddz7
      jtN1nYbWIJlMkC+Umbz5GopRw+X1MTM9TWJ0HK+reenoDb3pt+Fh8tk88bFxwj4Z2eVCq9fZ
      3d5kL1ts6dUaDYaSw1SLBfx9SYaifgxVJez3MZRMkM8e9cXAUIJKvsi165MEXBaK20Ndt0jG
      +iiVKoDJk+kZxiYncEkGuzu7yO4QlUqOcl1DNjR2t3dQAwEANpbnwNdPYrCPUil78V+B9nbS
      WMh4/AGq1ToTE+NIipu+cIBgOMJgLM5gfy+qKpPPZjBMUN0+tFqNsYkJJFmhtyeMJxjBrOYZ
      iA/jdikYWpVsqYZlmnhdMsG+OL0BD8FQCJfLi98toQb76Av6sMwG6b0yiqXj87pR/L1Mjl+j
      mt8lPjzKQG8IXfERjQQBi3R6FxmTQMCPIfuYGBsBrUxfLIlHlSgUingDQdyqwk4qDZKEPxCi
      3oDxsXG8qo6/d5CRZIL4UIK+SBhZltjbTmGh7PtCY3JykpBXQfL1MDYyTCm3R/LaCKoik9/b
      wTAlXB4f9Vqd8YkJesN+KobKzZuTFDLbDI+O41IVDK1GvlTDtCw8CoT74/T43RQrGpMT44R8
      Kt5wH0GvB9NosJMtI6Pj97hwBfqI9wXJF8qMT4xhGQ0KhRLBcBhFhtT2HgomAZ8PU/FzLd5H
      sVBkdHyCWCxOIpEkHA4gAdvpNBLgD4bQdBgbGaJcLJAYGScRHySzk2N0dBhZgt3tFKDg9QeQ
      XQGSgxEKhSJj4xP09wQoaTLXhqJIkoVWq1MsVbg2MUYhX2Zk5BoexaQnGmco1k+upDMy1I8k
      SVimQbFQwO2PEHRbl28ZVCB4mYgrUtDViAAQdDWXLg8g6F4MrUbVkFBMDdUbxKWcLLfxIog7
      gODyYDX46U//hr/78O+plrJ89sVDyqUCn33+kFJhj7mZOfaKtTMdUtwBBJcGxRNiNNig2H+P
      D//qx6i+IA3dYPXrX5Ivv8H2nsEfTZxthbEIAMGlIjqYwN/XS291hExDJSBV8YQH8Pt83LqV
      xOM620tWLIMKuhpxRQq6mv8PufGJCTGTnqsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Donut Chart For Cement co2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Donut Chart For Flaring co2' width='192'>
      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
      8wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Donut Chart For Oil co2' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Donut Chart for Gas co2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAbDklEQVR4nO3deWycZ2Lf8e8790lyxPsSKZIiLVmXKTryIVuSr6x3N92kWzQJ1omTbgvk
      jwQBHCwQBE2RXinaf/pPgkWBrNF6k7ZpsNbaW8fHWrUtyaYsyRIlUhJHvMT7nBnOkHPP+z79
      YyxKMs+5ODPk8wEESOTL931ov795n+d5n0MRQggkaZfS5bsAkpRPKwFYXl7OZzkkKS9WAqCq
      aj7LIUl5IatA0q5myHcBJGk9s6P9+FQ7M4O36XjyJLUuG+7e68wG4uytsKGVNNBS68roGjIA
      Ul5NjNzl5p0BXM4SWg+24e4fI7TkB6MVXXyZA00uzPX7uHShm9/47vPcGZ6ivdJKxLGP4RvX
      aKl9MaPryyqQlEcCd/8dvHMTOMvL+Nnf/18s+ij2+jaWfR5UITCbTESCy+gNBpaCYYTQiCVU
      TCYTWiKWcQlkAKS8amlt5cCRJ2ls7uDJJ49x+MhRYjODRDSFWpedWFkbZUqcU893MT65wIlj
      B1BL63ElvJTVNGd8feX+izC/309paWnGJ5SkTGhqjLv9d6ltbqPEose/HKWs1LHquMCiD3up
      C72S2fVkAKRdTVaBpF1NBkDa1WQApIJ1p/c6V69cJaLmbrymDIBUsAwWO481leNdTuTsGjIA
      UsGKhYPcHfNQZs/d+1rZCyQVLKFpaIBel7vPafkEkAqWotOhUzLs6N+EDIBU0DRNy+n5VypX
      kUgkpxeSpHSoqoper8/Z+VcCYLFYZBtAKjjBYBC73Z6z88sqkLSryQBIBS2X1R+QAZAKXK4b
      wTIAUkHL9bJVMgDSriYDIBU0XQ7fAoMMgLSGkZERfvGLX+B2u0kkEiQSCTRNQwhBLBbj1q1b
      DAwM4PV6V+ron3/+OV999RWaphGLxYjH46iqiqqqKz+fSCSYmZlZOUZVVWKxWMrVHCEEb775
      JktLS1y8eJGbN2+SSCRYWFggFosRi8XQNI1oNLppG0KuCiGtYrFYiEajGAwGzp49ixCC0tJS
      jh49Sk9PD/39/Tz11FO43W5KS0s5efIk0WiUaDTK9evXGR0dxe/3U1NTw8jICD6fjyeeeAKX
      y8XS0hKKouBwJKc5fvjhh/zoRz9at69/rRt4YWGB/fv343a76e3tpbOzk7feeou9e/dSU1PD
      8PAwhw8f5uzZsxw5coSXXnpp3d9VPgGkVQwGA4cOHeLGjRtYLBbMZjNCCNxuN5WVldTX12Ox
      WDh58iR6vR6Px8P4+Dj37t0jFovxzDPP0NHRgdPppLS0lFdffZWysjJOnDgBJD/Bq6urmZ6e
      prm5OeVRCLdv3yYQCDA8PEx7ezutra08/fTTOJ1O4vE4lZWVTExMcPToUZaWljY8lxwNKq0S
      j8cZGxujoaGB5eVlFEXBbDbj8/morKzE4/FQUlKC1WolFouh1+tRFAUhBPF4HLPZTDweByAa
      jRIKhXC5XFgsFsLhMDqdDo/Hg9VqJRqNUlVVtW5/fygUwmazPfK1YDCIzWYjFAqtlE1VVTRN
      w2g0MjMzQ1lZGR6Phz179qw8bdYiAyAVtEgkgsViydn5ZRVISpkQgnv37jE0NISqqgghmJmZ
      we/3EwwGmZycRFVVRkZGCIVCGV1rrTbA/evPzs4CyafMxMQEQgiCweDK0+fhRvp6ZACktOh0
      Oi5duoQQgmg0yuzsLJ988gkff/wx/f39uN1uIpEI586dy+g6a/UQ+f1+rl27tnJznz9/nvHx
      cXp6enjnnXeYmprC6/Xyk5/8hFhs49XjZACklCmKQkVFBU1NTRgMBsxmM8vLyxw4cAC9Xs/s
      7OxKQ/Sb9fdssFqt1NfXc+nSJQBKSkrw+/0sLCzQ2dkJwNmzZzGZTMzNzW14LtkNKqXl7t27
      HDt2jOnpaaLRKG63G7PZjF6vx263MzExkZVxPGu9CItEIni9XhwOB8PDw1RUVDAzM0NXVxef
      ffYZDoeD1157jStXrlBRUbHh+WUjWMrI3NwcFRUVOXtjGw6HsVqta35PCMHc3BzV1dVpn18G
      QMobTWgsRQJMBybxhbwE40FiiSjhePjrPyGayr6Dy1GOUadg1CsYdAoGvYLDpMdh1mM3ZTZc
      WlaBpG0RToQYnh9kYMHNlH+SmcAUU4FJIvEwmli/qvRc22lswbWfAApg0is4LXoMixOYlmfZ
      19pGTV3dlrtOZQCkrBNCEE3EmYtOMrE8wnjwHrOhab7q61nposzKdYCoKogGE8xcu4Z/sAcA
      q81GXUMDLW372dfaRm19PWazec1zyABIWaMJwY3BGc7fGOXOzD3aTt5GeahpYLVYshqA+4QQ
      RH0PenvCoRBDd+8ydPcuADa7nccef5zOJ0/Q3NLySHtFBkDKiBCCwUkvn/eOc7F3jPnF+y++
      BHVLJuylD/rhHXYbgU3G5qRVhkSceNC/7vdDwSDXLl/m2uXLlJaVcfjYExztPE5dQ4MMgJSe
      eELl+sAM7150c2t0Hk375gsrBc+kE3upZ+UrDkduVndIhJdQI8EtHetfXOTip5/wxfnPaGxq
      kgGQUqNqGt19E/zs/B2Gp3wbHrs446DxgIf7i7tZLJaVQXPZFF3c+GXXWjRNY3RkRAZA2pqE
      qtF9a5z/fe4WE/OBLf1MwGMlFjZgtiVXdzbo9VgtFkLhcFbLFvN7Nj9oHTIA0oaEEAxN+njr
      oxvcGJxN6Wc1VYdv1k7NvmT9XFEU7DZb1gMQ8c2k/bMyANK6gpEYf3/uFu9/OUgsoaZ1Dt+0
      YyUAAHa7jXlP+p/Y3/TNHqBUyQBIqwghOH9jlP/xwQ08gcw+rX0zdtSEgt6QrPfb7dkdHKfF
      wiS22ABeiwyA9IhQNM5bH9zgg8uDZKOtmojpCSzYcNUkb1KzyYTBYCCRyM6uL7GAF5FI/92C
      DIAEJD/1JxeW+K//5xKDk94snlnBO+VYCcD9doA/sLWG9GYi3vTr/yDnA0gkb/4LN8f40Y9/
      meWbP2lh0snDw32cWXwfEAtk1p6QT4BdLqFq/PTDm7zzeX9WqjxriQZNBANmHGVRAGy2tQe3
      pSrZAE6tZ+qb5BNgF4snVH7886v8/GLubv77fNMPVmawWizZmT8gtIx6gEAGYNcKhmP8l//1
      BR9/Nbwt11uYcK6EzGAwYLGsPTozFYnwMlpi4zm/m5EB2IV8S2H+w08vcPnO5LZdc9lrJRoy
      rvzbnoW5wpk2gEEGYNcJRmL85U8vcvve/LZeVwiFxdkHN302GsJRGQApFbG4yn/+n59zdyJ7
      b2JT4Zl0rvzdZs38CRALZN5jJQOwS8QSKn/19uWUx/Nk0+KcHTWeHBpqNBowmUxpn0toalqj
      QL9JBmAX0DTBTz+8yWc3RvNaDjWuwz+frProdDps66z2sKVzxSIbToLZKhmAHU4IwTsX+3n3
      c3e+iwIoLEw8qAY5MhgXFA/6EWrmwylkAHa4W/fm+buPe/NdjBXeacdKd2gm+/9mowEMMgA7
      mn85wl+/fYV4Irc7LaYiFjYSXEy+A7DbrGm/EIt4s9OWkQHYoTRN8ON3rjLlyf4k9EwtTJSs
      /N2a5tLnmY4Buk8GYAcSQvCPlwbovjWR76KsyTOZfCuc3Cop9WqQlogT8y9kpSwyADvQ1MIS
      b310I9/FWFcoYCISTL4VTueNcDzoR42ltq3SemQAdhhNE/z393uIxtKbwrgdhKZbGRxnsyZX
      ikhFfMkHGyynmAoZgB3my9sTXHFP5bsYm/JOJQNgNpsxmYybHP2obIwBuk8GYAcJReK89eHN
      nA9tzgb/go14NLmyc6rDIjKdA/AwGYAdQgjBzy/2F2Svz1rUuH5lcFyqL8Sy1QMEMgA7hicQ
      5uyF/nwXIyXemWQ1KJWVItR4lNhS9qZtygDsEO913yUWL9yG71q8Uw6EBhazGYNhaxtdRH1z
      ZLOOJwOQBaqqMjQ0RDgcJvCN1Q6EEKiqSigUIvzQimjBYJDx8fFNz73ZJm8Ai8sRPr46knrB
      8yweMRDwWNHr9Vve0CKb1R+Qk+KzIhaL8cEHH/DKK68QCoXweDzU19cD4PF4uHDhAi+88AJj
      Y2McOnSIjo4Obt68ic/nw+l08uWXX6LT6SgtLaWiooLR0VHa29uZnJzE5XIB0NvbS2trK/39
      /Zw+ffqRG+ajy0MEQtG8/O6ZSa4gXVoZxulwsLy8+QJX2RoDdJ98AmRJV1cXV65cYXx8nMbG
      RsbGxhgcHKSrq4vjx49TVVVFV1cXCwsLCCHo6+vD7XYzPz/P/v37EUIQj8e5cOECXq+Xvr4+
      mpqaGBkZoa+vj1OnTuH3+1lcXGRwcHDlukuhKO9dGsjjb54Z34wDTUu+D9iMEIJIFnuAQD4B
      skKn01FZWYmqqrhcLtxuN1VVVZSUlGA0GlFVlWAwSHV1NeXl5USjUZ577jlqa2txu900NzdT
      W1uL0WjEYDAQCARoaGhgz549K+f55JNPcDqdOByOR0ZRXrw5xuJydt6K5kNw0Uxk2YRjCyND
      hZogkYU5AA+Tu0QWMSEEf/LXHzG0yTr9ha61c5q6/V5u998lEn20Kvdc23/EZkru9Rtb8jHy
      7o+zem1ZBSpiUwtLRX/zQ3JwnKIoDy2YpWDUm7AZbVgMevRf36XRxexP55RVoBwTQtDb28vi
      4iJHjx7liy++4NixY9TW1tLd3U0oFOLQoUNcv36duro6vF4vMzMzfP/738do3HiIwMXesW36
      LXIrsuigQtfE4wePs8dQRV1pAw6zA73OgElvQxMQiWvMV7QxbHiRoYEBZqYmUdXMu31lAHJM
      VVW6u7tpbW3l/PnzGAwGol8/5ufn57FarZSVldHZ2Ul/fz+nTp3i3Llzm9788YTKpz35neOb
      qcoyG999up2nDzVS7dq4DWA16nE119PenOxd83m93Lx2je6L5wn4028XyDZAjqmqynvvvUdD
      QwODg4O89NJLXL16lZdffnmlR0ev17O0tMTzzz/P8HBypbbW1tYNz3tndJ4//W/ntuNXyLqK
      Uhu/+cLjnD7WjMmY2U7viXic61evcu7D99MKggzANhgZGWF+fp4jR47Q3d1NR0cHs7OzWCwW
      FhcXqauro7+/n6amJpxOJ3V1dZsOEX7zveu8UxAT3bdOpyi8/GQLr718hBJ75ksjPiwUCvHB
      L97lqy8vpbQJnwxAkXrjrz4sqgawxWTgD//pkzx3pCln1xBC0HP1Ku/+7B9WqpmbkW2AIuRb
      Cm95p8ZC4HJa+LPXnmN/w56cXkdRFI51dbGnooK/ffNvCC4vb/ozshu0CA1OeIkWycC3EpuZ
      P3/9FO2N5SnP/EqHoig07dvH7/zwX2HZwsJbMgBFqG8k8yUBt4PRoOON33yK1jrXtl97b3Mz
      v/3676PXb9zIlgEoQr3DxRGA337xEMfaavJ2/bb2dl781qsbHiMDUGRUVWN8rvDr/weaKvje
      yce2pdqzHkVROHn6DHub9617jAxAkZlbDKa9afV2Meh1/PDbT2DQ5//2MhgMfOfXf33dIOa/
      hFJKZryb92zk21MHG9jfWJ7vYqxobGrm4OEja35PBqDITMwX9qR3vU7heyc78l2MVU6ePoOy
      xjqkMgBFptCfAC11Ltpy3N+fjsamJqprVjfIZQCKzNRCYT8BTh7eiy6PDd/16HQ6Dh97YvXX
      81AWKU1CCALBwp77e7StOt9FWFf7gQOrviYDUEQ0IYjGM98VJVfKHBbqK0o2PzBPKquqcTid
      j3xNBqCIaJogXsBdoLXlDoyGwr2ljEYjrj2Ptk8Kt7TSKpomCnrV57pyZ15ffG1GURRcex7t
      npWjQYuIKkRBD4KzWVJb5RlgbGyMvr4+qqqqGBsbw2q10tTUxOjoKM8++yx2u53z588zPT1N
      R0cHQ0NDHD9+nIGBAaxWK6dOnUqtjN/Yj0A+AYqI0ATxLMyDzRWLKfXP08bGRkpKSjCbzezd
      uxen08m1a9cQQjA3N4der6ejo4POzk4OHjyI1WqltrYWIURaTxuT+dGJODIARUSnUzBtcQ3N
      fIjEUm+gf/rpp3g8HhwOB+Pj4ywtLXHw4EESiQSRSITJyUkikQgdHR28/fbbGAwGpqenAYjH
      4ylfz1VWSmtrC81Ne2lsqJdVoGKi0ymYjHqCkdT/x2+HpTSWZzxz5szK3/ftezBorbOzk0Ag
      gMFgWKm2/OAHP1j5/mZzptdTYzKh1dYQ1elQFUUGoJjolMJ+Asz6gmlXTdZSUpLlLlUhaJqd
      pckfQABxRZFVoGKi1+kwZ7iKQi7NeJcLak/iVRJxWE6+SVcAkxAyAMVEp1Mwp9HQ3C6+pQiz
      vgIeq+RbhMij66jKABQZu9WU7yJs6PKdyXwXYX1Tq8smA1Bk6iucmx+UR1/0jaNpBbhLn6bB
      yNCqL8sAFJlCD8DI9CKDk9nbwytrFuZhcXHVl2UAikxteWEHQNUEZ8/fSWl1tpwTAnpvrrm3
      mAxAkakr8CcAwKXbkwxOFNBTYG4ORu+t+S0ZgCJTVWYv6BGXkBy2/ZN/vE5CLYAuUVWFy5fW
      /XZh/5eUVtHpFPbVbv9CU6m6M7rAuxfd+a0KCQE3e2B+/XWUZACK0OGWqnwXYUv+7uNeegaz
      v6vLlo2Pw42eDQ+RAShCh/YVRwASqsb7Pz+/4SdwzszPwflPkt2fG5ABKEKtdS6sBfxGOEnQ
      ZYvzx2V++OWHMLtNTwIhYGYmec1YbNPDZQCKUKnDwt7qQt7LQXDGmeBPayPY9SSHH3z0Pgzc
      zfFlBQwNJq8V2drWsTIARepwa2GuvqAg+LXSOH9UFcH48KDQeBwunocLn2355kxJJJI894XP
      ILH1eQkyAEXqxIH6fBdhFR2Cf+6K8S8qoujXGhEtRPIp8M7bcOdWcnRmJoRIBqv/Npz9GQwO
      rPmyayOFXpGU1tFS56Kh0lkwSyXqEPywIsq3S+PoNpsOEAxC9xdw8wY8dhBaWsGZ4gs+vz85
      tqe/H0LBtMst9wgrYn/70U3+4dPb+S4GZkXwB5URzjgTpDUXRqeDPXugpg4qK6GkFCwWkjtk
      K8menEg4OZZnYQGmJ8Hn27SHZyvkE6CIvdC5L+8BsCqCN2rC/Io9g8n6mpa8sRcWHnxNr08G
      Q/k6ACnU61Mh2wBFrLbcQXselyF36jT+dW2GN/96VDVZv4/FcnbzgwxAUVMUhRc6m/Ny7T16
      jb+oC3PIVrjLtGyFDECRO3W0GZfTsq3XrDOq/GV9iDZLAQx2y5AMQJGzWYy8eqJt2663z6Ty
      b+vC1JoKaLx/BmQAdoBf/ZU2nLbczxV+zJLg39eHqDLujJsfZAB2hDKHhZe7WnJ6jRP2OP+m
      NoyzcFdlSYsMwA7xT57tyNFEGcFJR5w/qf56XM8OIwOwQ5Q5LHz/1MEsn1XwndI4b1RHMO/Q
      O2WH/lq7j6Ikd2fM1pxhBcFvuWL8cL1xPTuEDMAOYjMb+d1XjqQ3HOEhOgSvl0f5rT2xHX3z
      gwzAjnPiYAPH2+vS/nmjIvijqgi/4YpnHKRiIAOww+h0Cv/yu0+ktYiuTSd4ozo5qG23kAHY
      gWrLnbz+raMp/YxdJ/iz2jDPONIc0VmkZAB2qFef2s8zhxq3dGy5XuMv6kIcthb3uJ50yADs
      UDpF4Q++d3zTXqFqQ3JQW/sOGNeTDhmAHazUbuGP/9kJTGu2BwR7TSr/qSHEXvPuvPlBBmDH
      e2xvBa//6ur2wAGLyr+rC1Nu2DnjetIhA7ALfOfp/fzaM+0r/z5mTfDntWFcu/zmBzklcldQ
      FIXfe/UYy+EY6sAAf1i1c4c2pEpOit9F4vEE/L+PMU6O57soBUN+DuwiRqMB45kzUF6R76IU
      DBmA3cZkhle+BdU1+S5JQZAB2I2s1mQIGvfmuyR5JwOwWxmN8OJL0N6R75LklQzAbqbTwzMn
      4eixfJckb2QAdjudDjq74LlTYCrsTbhzQQZASi4/2LYfvvs9qCyO3WeyRQZASlIUKCuDb30b
      Dh1mt4yJlgGQHmU0wpMn4IWXwGbLd2lyTr4JltYXi0HPNbhzO7lY7Q4kAyBtTAjwepObTU9P
      5bs0WScDIG2NpsG9keS+uz5vvkuTNTIAUmqEgNGR5PZGD29oUaRkAKT0aBpMTUHfjeS+vFnY
      rmhb6XRQVS0DIGVICPAswPBQsoq0vJzvEm3MbofWNmhpA5dLBkDKIiFgdia5Fer4WG72A06H
      xQLN+2BfS3IUrO5B778MgJR9QiT39fJ5YXoaZqaS7YVodHuubzbDnnKorYWa2uT8B4NhzZd7
      MgDS9ojFkoGYmYZAAPyLyb1+Y3EQabYfFCU5v6GsDEpKoLQMqqqSW66azKsOP3fuHEIIzpw5
      g16fXClDzgmWtofJlKx+PDwRR4hkNSkQgOBy8qkRjz3YGTIWR1UT6C1WMBnBaEp+kptM4HCA
      3ZHS22qv10tzczO9vb00NzczPj4uAyDlkaIkJ+dYrUD1modEQyFsWRqSUVFRQUdHBz09PQSD
      QXw+nxwLJBW2r2voWWE2m7l8+TLt7e243W5aWlpkG0AqbMFgELvdnrPzyyeAVNB0utzeorIN
      IO0KQgi6u7u5fv06p0+fpr+/n+PHj8sASIVNy9IQC0VReOqppwiHw5SUlGA2m/F4PLIKJO0e
      AwMDtLW1YTAYaGhowOv1yieAVNiULE7NbGpqwmw2o2kaQggOHDggAyAVtmw2gi0WCwB6vZ66
      uuRGgrIKJBU0NcdTMWUApF1NBkDa1WQApIJ2f9RmrsgASAUtW+8B1iMDIBW0bA6GW4sMgLSr
      yQBIBW3bBsNFCmUCsyQ9JBqNEovFcnb+lQBYLBY5H0AqOKqq5rQnSFaBpIKW6yqQDIBU0LI5
      GG4tMgBSwRoZuEPPjT4SOewJlQGQClYcPa01NuaWEjm7hgyAVLDi0SgLviB2c+5uUzkfQCpY
      rfua8IdVSmUApN3IYi/BkrsVUQBZBZJ2ORkAaVeTVSCpYMXDAeYDCUy6BK7ySvQ6hUgwgD+s
      osSWcVTUYTNl9pZYBkDKq/mpUUbnAtSWu6iqq2B2xk/AM4XBWcHCaD+NTfVc7BvB7qrn5WcP
      89Evz2E36Wk9cpSbX17npee6Mrq+DICUR4K52Vn6b/QQaW6h7w5oWgJbdQve69ewWo2w7KH+
      wGEm+m6B9hiaYqKxwsay4iDiv5VxCWQbQMqr+YV59lRU0vT4ce4NDXHi+CEWJ4dYjsYx63WU
      Nh1g/Fo3bQcf48ueu1Q4jbjnwuwtUTBYnBlfX64OLRWUWGSJnmu9mEoraa2xMx820tJQueq4
      qZG7GMsbqSyxZnQ9GQBpV/v/UbvZU9qOOvcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Donut chart for coal co2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Emission Rate by Internal Factors' width='192'>
      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
      TqB08qldAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Overall Contribution by india in co2 Emission' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Overall contrubution by china in co2 Emission' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top Countrires Emission' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Emission by continents' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Total World Emission' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='co2 Emissioin in 2020' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
